从gc角度，堆一般分为老年代(内存占2/3，存放保存久一点的)和
新生代（内存占1/3存放新生的对象，一般这些都生命周期比较短，
分为Eden，SurvivorFrom或者ServivorTo,只会选一个与Eden构成新生代，
他俩只是一个定义，一片区域为from,那么另一个就是to,详细的见minorGC流程
minorgc，1回收对象，2复制Eden(第一次只有Eden，复制到from,但是之后就会把Eden，from存活对象复制到to）
3清除Eden（from）,4如果不是第一次，当前存放对象的to变成from

Eden存放新生对象，如果此对象内存占用大，就直接放到老年代，
否则如下：先看内存，不够触发minorGC，清理新生代，在新生代每一次gc存活下来都会年龄+1，到15就会移动到老年代

扩展：majorGC,清理老年代，fullGC，清理新老两代,
MinorGC之前，JVM会判断之前每次晋升到老年代的平均大小是否
大于老年代剩余空间的大小，若大于则进行full GC（即回收所有区域）
from,是上一次gc的幸存者
）